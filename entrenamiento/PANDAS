{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNId/Xks5aM3mEVJw5XMsvJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":273},"id":"kkbHaGOEbKaw","executionInfo":{"status":"ok","timestamp":1746232197883,"user_tz":300,"elapsed":51,"user":{"displayName":"Gisella Villota Rosero","userId":"03533339398489727134"}},"outputId":"86a26be7-e8ca-40b1-ea18-9cead5e7f332"},"outputs":[{"output_type":"stream","name":"stdout","text":["['Andrew', 'Philiph', 'John']\n","{'name': ['Andrew', 'Philiph', 'John'], 'weight': [50, 78, 91.5], 'height': [1.76, 1.87, 1.69]}\n","      name  weight  height\n","0   Andrew    50.0    1.76\n","1  Philiph    78.0    1.87\n","2     John    91.5    1.69\n"]},{"output_type":"execute_result","data":{"text/plain":["      name  weight  height\n","0   Andrew    50.0    1.76\n","1  Philiph    78.0    1.87\n","2     John    91.5    1.69"],"text/html":["\n","  <div id=\"df-c90091ed-7edc-4bb1-a312-9cb8b78e1150\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>weight</th>\n","      <th>height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Andrew</td>\n","      <td>50.0</td>\n","      <td>1.76</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Philiph</td>\n","      <td>78.0</td>\n","      <td>1.87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>John</td>\n","      <td>91.5</td>\n","      <td>1.69</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c90091ed-7edc-4bb1-a312-9cb8b78e1150')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c90091ed-7edc-4bb1-a312-9cb8b78e1150 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c90091ed-7edc-4bb1-a312-9cb8b78e1150');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ecb0bbea-2a2f-4a89-a9b4-563fb212df5e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ecb0bbea-2a2f-4a89-a9b4-563fb212df5e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ecb0bbea-2a2f-4a89-a9b4-563fb212df5e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_ee90d1fd-7bed-40e5-bb91-6fed44e08224\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ee90d1fd-7bed-40e5-bb91-6fed44e08224 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Andrew\",\n          \"Philiph\",\n          \"John\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.167978961944698,\n        \"min\": 50.0,\n        \"max\": 91.5,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          50.0,\n          78.0,\n          91.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09073771725877475,\n        \"min\": 1.69,\n        \"max\": 1.87,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.76,\n          1.87,\n          1.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["import pandas as pd\n","\n","#create a dataset\n","#let´s build the values lists\n","value_n_list=[\"Andrew\",\"Philiph\",\"John\" ]\n","print(value_n_list)\n","\n","value_w_list=[ 50,78,91.5]#[ kg]\n","value_h_list=[ 1.76,1.87,1.69]#[ m]\n","# value_bmi_list will be valvulated:bmi = w/(h´´2)\n","# value_bmi_list = [25,25,25] #init values [kg/m2]\n","\n","#let´s use a dictionary ({key:value})\n","# with the format {\"str\":list}\n","data_dict={\"name\":value_n_list,\n","           \"weight\":value_w_list,\n","           \"height\":value_h_list} #,\n","           #\"BMI\":value_bmi_list}\n","\n","print(data_dict)\n","#turn a dictionary into a datafrane\n","df= pd.DataFrame(data_dict)\n","print(df)\n","df"]},{"cell_type":"code","source":["import pandas as pd\n","\n","#create a dataset\n","#let´s build the values lists\n","value_n_list=[\"Andrew\",\"Philiph\",\"John\",\"Andrea\",\"Nicolas\",\"David\",\"Julian\",\"Carol\",\"Ana\",\"Felipe\" ]\n","print(value_n_list)\n","\n","value_w_list=[ 50,78,91.5,45,56.7,87.9,43.8,77.9,90.3,76]#[ kg]\n","value_h_list=[ 1.76,1.87,1.69,1.75,1.80,1.58,1.63,1.87,1.73,1.78]#[ m]\n","# value_bmi_list will be valvulated:bmi = w/(h´´2)\n","# value_bmi_list = [25,25,25] #init values [kg/m2]\n","\n","#let´s use a dictionary ({key:value})\n","# with the format {\"str\":list}\n","data_dict={\"name\":value_n_list,\n","           \"weight\":value_w_list,\n","           \"height\":value_h_list} #,\n","           #\"BMI\":value_bmi_list}\n","\n","print(data_dict)\n","#turn a dictionary into a datafrane\n","df= pd.DataFrame(data_dict)\n","print(df)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":620},"id":"KgfUyWtzjQLP","executionInfo":{"status":"ok","timestamp":1746232418644,"user_tz":300,"elapsed":47,"user":{"displayName":"Gisella Villota Rosero","userId":"03533339398489727134"}},"outputId":"f37ac499-3674-4c12-c077-ca81b7c902f3"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["['Andrew', 'Philiph', 'John', 'Andrea', 'Nicolas', 'David', 'Julian', 'Carol', 'Ana', 'Felipe']\n","{'name': ['Andrew', 'Philiph', 'John', 'Andrea', 'Nicolas', 'David', 'Julian', 'Carol', 'Ana', 'Felipe'], 'weight': [50, 78, 91.5, 45, 56.7, 87.9, 43.8, 77.9, 90.3, 76], 'height': [1.76, 1.87, 1.69, 1.75, 1.8, 1.58, 1.63, 1.87, 1.73, 1.78]}\n","      name  weight  height\n","0   Andrew    50.0    1.76\n","1  Philiph    78.0    1.87\n","2     John    91.5    1.69\n","3   Andrea    45.0    1.75\n","4  Nicolas    56.7    1.80\n","5    David    87.9    1.58\n","6   Julian    43.8    1.63\n","7    Carol    77.9    1.87\n","8      Ana    90.3    1.73\n","9   Felipe    76.0    1.78\n"]},{"output_type":"execute_result","data":{"text/plain":["      name  weight  height\n","0   Andrew    50.0    1.76\n","1  Philiph    78.0    1.87\n","2     John    91.5    1.69\n","3   Andrea    45.0    1.75\n","4  Nicolas    56.7    1.80\n","5    David    87.9    1.58\n","6   Julian    43.8    1.63\n","7    Carol    77.9    1.87\n","8      Ana    90.3    1.73\n","9   Felipe    76.0    1.78"],"text/html":["\n","  <div id=\"df-bbf961f5-1e18-487d-98ca-24f2f8eb80df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>weight</th>\n","      <th>height</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Andrew</td>\n","      <td>50.0</td>\n","      <td>1.76</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Philiph</td>\n","      <td>78.0</td>\n","      <td>1.87</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>John</td>\n","      <td>91.5</td>\n","      <td>1.69</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Andrea</td>\n","      <td>45.0</td>\n","      <td>1.75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Nicolas</td>\n","      <td>56.7</td>\n","      <td>1.80</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>David</td>\n","      <td>87.9</td>\n","      <td>1.58</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Julian</td>\n","      <td>43.8</td>\n","      <td>1.63</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Carol</td>\n","      <td>77.9</td>\n","      <td>1.87</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Ana</td>\n","      <td>90.3</td>\n","      <td>1.73</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Felipe</td>\n","      <td>76.0</td>\n","      <td>1.78</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbf961f5-1e18-487d-98ca-24f2f8eb80df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bbf961f5-1e18-487d-98ca-24f2f8eb80df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bbf961f5-1e18-487d-98ca-24f2f8eb80df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a0aa432d-04ca-4458-bd2a-f8a0dd4c8c5e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0aa432d-04ca-4458-bd2a-f8a0dd4c8c5e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a0aa432d-04ca-4458-bd2a-f8a0dd4c8c5e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_220f0115-0435-4a94-9c51-12d58cb75bd3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_220f0115-0435-4a94-9c51-12d58cb75bd3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Ana\",\n          \"Philiph\",\n          \"David\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.987273515582896,\n        \"min\": 43.8,\n        \"max\": 91.5,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          90.3,\n          78.0,\n          87.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09395034149308172,\n        \"min\": 1.58,\n        \"max\": 1.87,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.73,\n          1.87,\n          1.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["import pandas as pd\n","\n","#create a dataset\n","#let´s build the values lists\n","value_n_list=[\"Andrew\",\"Philiph\",\"John\",\"Andrea\",\"Nicolas\",\"David\",\"Julian\",\"Carol\",\"Ana\",\"Felipe\" ]\n","print(value_n_list)\n","\n","value_w_list=[ 50,78,91.5,45,56.7,87.9,43.8,77.9,90.3,76]#[ kg]\n","value_h_list=[ 1.76,1.87,1.69,1.75,1.80,1.58,1.63,1.87,1.73,1.78]#[ m]\n","# value_bmi_list will be valvulated:bmi = w/(h**2)peso/altura al cuadrado\n","# value_bmi_list = [25,25,25] #init values [kg/m2]\n","\n","#let´s use a dictionary ({key:value})\n","# with the format {\"str\":list}\n","data_dict={\"name\":value_n_list,\n","           \"weight\":value_w_list,\n","           \"height\":value_h_list} #,\n","           #\"BMI\":value_bmi_list}\n","\n","print(data_dict)\n","#turn a dictionary into a datafrane\n","df= pd.DataFrame(data_dict)\n","print(df)\n","df\n","[] # prompt:con DataFrame df: add another column\n","\n","df[\"bmi\"]= df['weight']/(df['height']**2)\n","print(df)\n","df\n","import numpy as np\n","df['clasification_bmi'] = np.where(df['bmi'] < 18.5, 'Bajo peso',\n","np.where(df['bmi'] < 25, 'Peso ideal', 'Sobrepeso'))\n","df\n","\n","# Calcular el peso ideal para cada persona\n","df['peso_ideal'] = 22 * (df['height'] ** 2)  # Fórmula para un IMC de 22 (dentro del rango ideal)\n","\n","# Calcular la diferencia entre el peso actual y el peso ideal\n","df['diferencia_peso'] = df['peso_ideal'] - df['weight']\n","\n","# Crear la columna de recomendación\n","df['recomendacion'] = np.where(df['diferencia_peso'] > 0,\n","                                 'Subir ' + df['diferencia_peso'].round(1).astype(str) + ' kg',\n","                                 'Bajar ' + (-df['diferencia_peso']).round(1).astype(str) + ' kg')\n","\n","df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bRq9lEeMlfY8","executionInfo":{"status":"ok","timestamp":1746237450950,"user_tz":300,"elapsed":58,"user":{"displayName":"Gisella Villota Rosero","userId":"03533339398489727134"}},"outputId":"66ccd67c-f9d1-4c1a-a374-672f084227ef"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["['Andrew', 'Philiph', 'John', 'Andrea', 'Nicolas', 'David', 'Julian', 'Carol', 'Ana', 'Felipe']\n","{'name': ['Andrew', 'Philiph', 'John', 'Andrea', 'Nicolas', 'David', 'Julian', 'Carol', 'Ana', 'Felipe'], 'weight': [50, 78, 91.5, 45, 56.7, 87.9, 43.8, 77.9, 90.3, 76], 'height': [1.76, 1.87, 1.69, 1.75, 1.8, 1.58, 1.63, 1.87, 1.73, 1.78]}\n","      name  weight  height\n","0   Andrew    50.0    1.76\n","1  Philiph    78.0    1.87\n","2     John    91.5    1.69\n","3   Andrea    45.0    1.75\n","4  Nicolas    56.7    1.80\n","5    David    87.9    1.58\n","6   Julian    43.8    1.63\n","7    Carol    77.9    1.87\n","8      Ana    90.3    1.73\n","9   Felipe    76.0    1.78\n","      name  weight  height        bmi\n","0   Andrew    50.0    1.76  16.141529\n","1  Philiph    78.0    1.87  22.305471\n","2     John    91.5    1.69  32.036693\n","3   Andrea    45.0    1.75  14.693878\n","4  Nicolas    56.7    1.80  17.500000\n","5    David    87.9    1.58  35.210703\n","6   Julian    43.8    1.63  16.485378\n","7    Carol    77.9    1.87  22.276874\n","8      Ana    90.3    1.73  30.171406\n","9   Felipe    76.0    1.78  23.986870\n"]},{"output_type":"execute_result","data":{"text/plain":["      name  weight  height        bmi clasification_bmi  peso_ideal  \\\n","0   Andrew    50.0    1.76  16.141529         Bajo peso     68.1472   \n","1  Philiph    78.0    1.87  22.305471        Peso ideal     76.9318   \n","2     John    91.5    1.69  32.036693         Sobrepeso     62.8342   \n","3   Andrea    45.0    1.75  14.693878         Bajo peso     67.3750   \n","4  Nicolas    56.7    1.80  17.500000         Bajo peso     71.2800   \n","5    David    87.9    1.58  35.210703         Sobrepeso     54.9208   \n","6   Julian    43.8    1.63  16.485378         Bajo peso     58.4518   \n","7    Carol    77.9    1.87  22.276874        Peso ideal     76.9318   \n","8      Ana    90.3    1.73  30.171406         Sobrepeso     65.8438   \n","9   Felipe    76.0    1.78  23.986870        Peso ideal     69.7048   \n","\n","   diferencia_peso  recomendacion  \n","0          18.1472  Subir 18.1 kg  \n","1          -1.0682   Bajar 1.1 kg  \n","2         -28.6658  Bajar 28.7 kg  \n","3          22.3750  Subir 22.4 kg  \n","4          14.5800  Subir 14.6 kg  \n","5         -32.9792  Bajar 33.0 kg  \n","6          14.6518  Subir 14.7 kg  \n","7          -0.9682   Bajar 1.0 kg  \n","8         -24.4562  Bajar 24.5 kg  \n","9          -6.2952   Bajar 6.3 kg  "],"text/html":["\n","  <div id=\"df-99475b40-3d87-4a7c-9b27-ee08ede234e9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>weight</th>\n","      <th>height</th>\n","      <th>bmi</th>\n","      <th>clasification_bmi</th>\n","      <th>peso_ideal</th>\n","      <th>diferencia_peso</th>\n","      <th>recomendacion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Andrew</td>\n","      <td>50.0</td>\n","      <td>1.76</td>\n","      <td>16.141529</td>\n","      <td>Bajo peso</td>\n","      <td>68.1472</td>\n","      <td>18.1472</td>\n","      <td>Subir 18.1 kg</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Philiph</td>\n","      <td>78.0</td>\n","      <td>1.87</td>\n","      <td>22.305471</td>\n","      <td>Peso ideal</td>\n","      <td>76.9318</td>\n","      <td>-1.0682</td>\n","      <td>Bajar 1.1 kg</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>John</td>\n","      <td>91.5</td>\n","      <td>1.69</td>\n","      <td>32.036693</td>\n","      <td>Sobrepeso</td>\n","      <td>62.8342</td>\n","      <td>-28.6658</td>\n","      <td>Bajar 28.7 kg</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Andrea</td>\n","      <td>45.0</td>\n","      <td>1.75</td>\n","      <td>14.693878</td>\n","      <td>Bajo peso</td>\n","      <td>67.3750</td>\n","      <td>22.3750</td>\n","      <td>Subir 22.4 kg</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Nicolas</td>\n","      <td>56.7</td>\n","      <td>1.80</td>\n","      <td>17.500000</td>\n","      <td>Bajo peso</td>\n","      <td>71.2800</td>\n","      <td>14.5800</td>\n","      <td>Subir 14.6 kg</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>David</td>\n","      <td>87.9</td>\n","      <td>1.58</td>\n","      <td>35.210703</td>\n","      <td>Sobrepeso</td>\n","      <td>54.9208</td>\n","      <td>-32.9792</td>\n","      <td>Bajar 33.0 kg</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Julian</td>\n","      <td>43.8</td>\n","      <td>1.63</td>\n","      <td>16.485378</td>\n","      <td>Bajo peso</td>\n","      <td>58.4518</td>\n","      <td>14.6518</td>\n","      <td>Subir 14.7 kg</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Carol</td>\n","      <td>77.9</td>\n","      <td>1.87</td>\n","      <td>22.276874</td>\n","      <td>Peso ideal</td>\n","      <td>76.9318</td>\n","      <td>-0.9682</td>\n","      <td>Bajar 1.0 kg</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Ana</td>\n","      <td>90.3</td>\n","      <td>1.73</td>\n","      <td>30.171406</td>\n","      <td>Sobrepeso</td>\n","      <td>65.8438</td>\n","      <td>-24.4562</td>\n","      <td>Bajar 24.5 kg</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Felipe</td>\n","      <td>76.0</td>\n","      <td>1.78</td>\n","      <td>23.986870</td>\n","      <td>Peso ideal</td>\n","      <td>69.7048</td>\n","      <td>-6.2952</td>\n","      <td>Bajar 6.3 kg</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99475b40-3d87-4a7c-9b27-ee08ede234e9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-99475b40-3d87-4a7c-9b27-ee08ede234e9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-99475b40-3d87-4a7c-9b27-ee08ede234e9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d3f13fd0-d642-4caa-8dbd-0d89a06bc61d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3f13fd0-d642-4caa-8dbd-0d89a06bc61d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d3f13fd0-d642-4caa-8dbd-0d89a06bc61d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e9ce830b-f1e7-4ef4-8213-718f21294f17\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e9ce830b-f1e7-4ef4-8213-718f21294f17 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Ana\",\n          \"Philiph\",\n          \"David\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.987273515582896,\n        \"min\": 43.8,\n        \"max\": 91.5,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          90.3,\n          78.0,\n          87.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"height\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09395034149308172,\n        \"min\": 1.58,\n        \"max\": 1.87,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.73,\n          1.87,\n          1.58\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bmi\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.2481916794495564,\n        \"min\": 14.693877551020408,\n        \"max\": 35.21070341291459,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          30.171405660062145,\n          22.305470559638533,\n          35.21070341291459\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clasification_bmi\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Bajo peso\",\n          \"Peso ideal\",\n          \"Sobrepeso\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso_ideal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.160505889763193,\n        \"min\": 54.92080000000001,\n        \"max\": 76.93180000000001,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          65.8438,\n          76.93180000000001,\n          54.92080000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diferencia_peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.400104208274147,\n        \"min\": -32.9792,\n        \"max\": 22.375,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          -24.456199999999995,\n          -1.0681999999999903,\n          -32.9792\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recomendacion\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Bajar 24.5 kg\",\n          \"Bajar 1.1 kg\",\n          \"Bajar 33.0 kg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]}]}